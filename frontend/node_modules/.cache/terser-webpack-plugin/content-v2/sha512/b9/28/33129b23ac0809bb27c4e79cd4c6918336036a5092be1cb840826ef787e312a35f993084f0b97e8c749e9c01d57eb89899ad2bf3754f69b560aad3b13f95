{"map":"{\"version\":3,\"sources\":[\"/home/tony308/IdeaProjects/CV-Management-System/frontend/src/components/login.js\",\"/home/tony308/IdeaProjects/CV-Management-System/frontend/src/components/navbar.js\",\"/home/tony308/IdeaProjects/CV-Management-System/frontend/src/App.js\",\"/home/tony308/IdeaProjects/CV-Management-System/frontend/src/serviceWorker.js\",\"/home/tony308/IdeaProjects/CV-Management-System/frontend/src/index.js\"],\"names\":[\"Login\",\"_React$Component\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"apply\",\"arguments\",\"inherits\",\"createClass\",\"key\",\"value\",\"react_default\",\"a\",\"createElement\",\"type\",\"placeholder\",\"React\",\"Component\",\"NavBar\",\"navLinks\",\"map\",\"page\",\"href\",\"App\",\"_Component\",\"className\",\"navbar_NavBar\",\"login_Login\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"yNAEaA,SAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,CAAA,CAAAW,IAAA,SAAAC,MAAA,WAGQ,OACIC,EAAAC,EAAAC,cAAA,MAAA,KACIF,EAAAC,EAAAC,cAAA,IAAA,KAAA,aAAgBF,EAAAC,EAAAC,cAAA,QAAA,CAAOC,KAAK,OAAOC,YAAY,aAC/CJ,EAAAC,EAAAC,cAAA,IAAA,KAAA,YAAeF,EAAAC,EAAAC,cAAA,QAAA,CAAOC,KAAK,WAAWC,YAAY,aAClDJ,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAAA,QAAA,CAAOC,KAAK,SAASJ,MAAM,gBAT3CZ,EAAA,CAA2BkB,EAAAA,EAAMC,YCApBC,EAAb,SAAAnB,GAAA,SAAAmB,IAAA,OAAAlB,OAAAC,EAAA,EAAAD,CAAAE,KAAAgB,GAAAlB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkB,GAAAb,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAkB,EAAAnB,GAAAC,OAAAQ,EAAA,EAAAR,CAAAkB,EAAA,CAAA,CAAAT,IAAA,SAAAC,MAAA,WAEQ,IACMS,EADQ,CAAC,QAAS,OAAQ,OAAQ,MAAO,MAAO,OAAQ,QAAS,WAChDC,IAAI,SAAAC,GACvB,OACIV,EAAAC,EAAAC,cAAA,IAAA,CAAGS,KAAM,IAAMD,GACVA,EADL,IACWV,EAAAC,EAAAC,cAAA,KAAA,SAQnB,OAAOF,EAAAC,EAAAC,cAAA,MAAA,KAAMM,OAdrBD,EAAA,CAA4BF,EAAAA,EAAMC,WCkBnBM,EAbf,SAAAC,GAAA,SAAAD,IAAA,OAAAvB,OAAAC,EAAA,EAAAD,CAAAE,KAAAqB,GAAAvB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuB,GAAAlB,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAuB,EAAAC,GAAAxB,OAAAQ,EAAA,EAAAR,CAAAuB,EAAA,CAAA,CAAAd,IAAA,SAAAC,MAAA,WAGI,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKY,UAAU,SACXd,EAAAC,EAAAC,cAACa,EAAD,MACAf,EAAAC,EAAAC,cAACc,EAAD,WANZJ,EAAA,CAAyBN,EAAAA,WCKLW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OACLvB,EAAAC,EAAAC,cAACsB,EAAD,MACAC,SAASC,eAAe,SDyHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\n\\nexport class Login extends React.Component {\\n    render() {\\n\\n        return (\\n            <div>\\n                <p>Username:</p><input type=\\\"text\\\" placeholder=\\\"Username\\\"/>\\n                <p>Password</p><input type=\\\"password\\\" placeholder=\\\"Password\\\"/>\\n                <br/>\\n                <br/>\\n                <input type=\\\"submit\\\" value=\\\"Submit\\\"/>\\n            </div>\\n        );\\n    }\\n}\",\"import React from 'react';\\n\\nexport class NavBar extends React.Component {\\n    render() {\\n        const pages = ['hoame', 'blog', 'pics', 'bio', 'art', 'shop', 'about', 'contact'];\\n        const navLinks = pages.map(page => {\\n            return (\\n                <a href={'/' + page}>\\n                    {page} <br/>\\n                </a>\\n\\n\\n            )\\n        });\\n\\n\\n        return <nav>{navLinks}</nav>;\\n    }\\n}\",\"import React, { Component } from 'react';\\n// import logo from './logo.svg';\\nimport './App.css';\\nimport { Login } from './components/login.js';\\nimport {NavBar} from \\\"./components/navbar\\\";\\n\\n\\nexport class App extends Component {\\n\\n  render() {\\n    return (\\n        <div className=\\\"login\\\">\\n            <NavBar/>\\n            <Login />\\n\\n        </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(\\n    <App />,\\n    document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{13:function(e,t,n){},15:function(e,t,n){},17:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),c=n(7),o=n.n(c),l=(n(13),n(1)),i=n(2),u=n(4),s=n(3),m=n(5),p=(n(15),function(e){function t(){return Object(l.a)(this,t),Object(u.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(\"p\",null,\"Username:\"),r.a.createElement(\"input\",{type:\"text\",placeholder:\"Username\"}),r.a.createElement(\"p\",null,\"Password\"),r.a.createElement(\"input\",{type:\"password\",placeholder:\"Password\"}),r.a.createElement(\"br\",null),r.a.createElement(\"br\",null),r.a.createElement(\"input\",{type:\"submit\",value:\"Submit\"}))}}]),t}(r.a.Component)),b=function(e){function t(){return Object(l.a)(this,t),Object(u.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e=[\"hoame\",\"blog\",\"pics\",\"bio\",\"art\",\"shop\",\"about\",\"contact\"].map(function(e){return r.a.createElement(\"a\",{href:\"/\"+e},e,\" \",r.a.createElement(\"br\",null))});return r.a.createElement(\"nav\",null,e)}}]),t}(r.a.Component),h=function(e){function t(){return Object(l.a)(this,t),Object(u.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"login\"},r.a.createElement(b,null),r.a.createElement(p,null))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(h,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,n){e.exports=n(17)}},[[8,2,1]]]);","extractedComments":[]}